{
    "column_map": {
        "session_id"           : "session_id",
        "app_id"               : "app_id",
        "timestamp"            : "timestamp",
        "event_name"           : "event_name",
        "event_data"           : "event_data",
        "event_source"         : "event_source",
        "app_version"          : "app_version",
        "app_branch"           : "app_branch",
        "log_version"          : "log_version",
        "time_offset"          : "offset",
        "user_id"              : "user_id",
        "user_data"            : "user_data",
        "game_state"           : "game_state",
        "event_sequence_index" : "index"
    },

    "columns": [
        {
            "name": "session_id",
            "readable": "Session ID",
            "description": "Unique identifier for the gameplay session",
            "type": "str"
        },
        {
            "name": "app_id",
            "readable": "App Name",
            "description": "A string identifying which game from which the event came",
            "type": "str"
        },
        {
            "name": "timestamp",
            "readable": "Timestamp",
            "description": "The time when the event was logged",
            "type": "datetime"
        },
        {
            "name": "event_name",
            "readable": "Event Type",
            "description": "The type of event logged",
            "type": "str"
        },
        {
            "name": "event_data",
            "readable": "Event Data",
            "description": "Data specific to an event type, encoded as a JSON string",
            "type": "json"
        },
        {
            "name": "event_source",
            "readable": "Event Source",
            "description": "An enum member indicating whether the event was generated by the Game, or by a Detector",
            "type": "enum('GAME', 'GENERATED')"
        },
        {
            "name": "app_version",
            "readable": "App Version",
            "description": "The version of the game from which the event came",
            "type": "int"
        },
        {
            "name": "app_branch",
            "readable": "App Branch",
            "description": "The branch of the game from which the event came",
            "type": "str"
        },
        {
            "name": "log_version",
            "readable": "Log Version",
            "description": "The version of the logging code for the game from which the event came",
            "type": "int"
        },
        {
            "name": "offset",
            "readable": "Time Offset",
            "description": "The local offset of the event time from GMT",
            "type": "timedelta"
        },
        {
            "name": "user_id",
            "readable": "Player ID",
            "description": "A custom, per-player ID, only exists if player entered an ID on one of our custom portal pages, else null",
            "type": "str"
        },
        {
            "name": "user_data",
            "readable": "User Data",
            "description": "Metadata specific to a user, encoded as a JSON string",
            "type": "json"
        },
        {
            "name": "game_state",
            "readable": "Game State",
            "description": "Metadata about the state of the game when the event occurred, encoded as a JSON string",
            "type": "json"
        },
        {
            "name": "index",
            "readable": "Event-Sequence Index",
            "description": "Counter of events in the session, from 0. A row with session_n = i is the (i+1)-th event of the session",
            "type": "int"
        }
    ]
}