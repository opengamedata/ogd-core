{
    "level_range": { "min":0, "max":34 },

    "events":{
        "COMPLETE.0": {
            "event_custom":{"enum":["COMPLETE"]},
            "amplitude_left":"float",
            "wavelength_left":"float",
            "offset_left":"float",
            "amplitude_right":"float",
            "wavelength_right":"float",
            "offset_right":"float",
            "closeness":"float"
        },
        "SUCCEED.0": {
            "event_custom":{"enum":["SUCCEED"]},
            "amplitude_left":"float",
            "wavelength_left":"float",
            "offset_left":"float",
            "amplitude_right":"float",
            "wavelength_right":"float",
            "offset_right":"float",
            "closeness":"float"
        },
        "FAIL.0": {
            "event_custom":{"enum":["FAIL"]},
            "amplitude_left":"float",
            "wavelength_left":"float",
            "offset_left":"float",
            "amplitude_right":"float",
            "wavelength_right":"float",
            "offset_right":"float",
            "closeness":"float"
        },
        "CUSTOM.1": {
            "event_custom":{"enum":["SLIDER_MOVE_RELEASE"]},
            "slider":{"enum": ["AMPLITUDE", "OFFSET", "WAVELENGTH"]},
            "wave":"string",
            "begin_val":"float",
            "end_val":"float",
            "min_val":"float",
            "max_val":"float",
            "ave_val":"float",
            "begin_closeness":"float",
            "end_closeness":"float",
            "drag_length_ticks":"int",
            "direction_shifts":"int",
            "stdev_val":"float",
            "correct_val":"float"
        },
        "CUSTOM.2": {
            "event_custom":{"enum":["ARROW_MOVE_RELEASE"]},
            "slider":{"enum": ["AMPLITUDE", "OFFSET", "WAVELENGTH"]},
            "wave":"string",
            "begin_val":"float",
            "end_val":"float",
            "closeness":"float",
            "correct_val":"float"
        },
        "CUSTOM.3": {
            "event_custom":{"enum":["QUESTION_ANSWER"]},
            "answer":"int",
            "answered":"int",
            "question":"int"
        },
        "CUSTOM.4": {
            "event_custom":{"enum":["RESET_BTN_PRESS"]},
            "amplitude_left":"float",
            "wavelength_left":"float",
            "offset_left":"float",
            "amplitude_right":"float",
            "wavelength_right":"float",
            "offset_right":"float",
            "closeness":"float"
        },
        "CUSTOM.5": {
            "event_custom":{"enum":["MENU_BUTTON"]}
        },
        "CUSTOM.6": {
            "event_custom":{"enum":["SKIP_BUTTON"]}
        },
        "CUSTOM.7": {
            "event_custom":{"enum":["DISMISS_MENU_BUTTON"]}
        }
    },

    "features": {
        "per_count": {
            "BeginCount": {
                "type": "BeginCount",
                "enabled": true,
                "count":"level_range",
                "prefix": "lvl",
                "return_type":"int",
                "description": "number of times a player 'began' the level. [count of 'BEGIN' events]"
            },
            "Completed": {
                "type": "Completed",
                "enabled": true,
                "count":"level_range",
                "prefix": "lvl",
                "return_type":"bool",
                "description": "whether the level was completed or not [bool whether 'COMPLETE' event was found]",
                "subfeatures": {
                    "Count":{"return_type":"int", "description":"number of times a player 'completed' the level. [count of 'COMPLETE' events]"}
                }
            },
            "MenuButtonCount": {
                "type": "MenuButtonCount",
                "enabled": false,
                "count":"level_range",
                "prefix": "lvl",
                "return_type":"int",
                "description": "number of times the player returned to the main menu. [count of 'MENU_BUTTON' events]"
            },
            "SucceedCount": {
                "type": "SucceedCount",
                "enabled": true,
                "count":"level_range",
                "prefix": "lvl",
                "return_type":"int",
                "description": "number of times a 'SUCCEED' event occurs. [count of 'SUCCEED' events]"
            },
            "TotalFails": {
                "type": "TotalFails",
                "enabled": true,
                "count":"level_range",
                "prefix": "lvl",
                "return_type":"int",
                "description": "number of 'Fail' events across a level"
            },
            "TotalLevelTime": {
                "type": "TotalLevelTime",
                "enabled": true,
                "count":"level_range",
                "prefix": "lvl",
                "description": "time spent on a level [sum of differences in time between 'BEGIN' and 'COMPLETE' event(s)]"
            },
            "TotalResets": {
                "type": "TotalResets",
                "enabled": true,
                "count":"level_range",
                "prefix": "lvl",
                "return_type":"int",
                "description": "number of times the user pressed the 'reset' button across a level"
            },
            "TotalSkips": {
                "type": "TotalSkips",
                "enabled": true,
                "count":"level_range",
                "prefix": "lvl",
                "return_type":"int",
                "description": "number of times the player chose to skip the level (only allowed if they already completed the level once)"
            },



            "FirstMoveType": {
                "type": "FirstMoveType",
                "enabled": true,
                "count":"level_range",
                "prefix": "lvl",
                "description": "A character indicating what type of slider move a player made first. A = Amplitude, W = Wavelength, O = Offset, null = No moves"
            },
            "AmplitudeGoodMoveCount": {
                "type": "AmplitudeGoodMoveCount",
                "enabled": true,
                "count":"level_range",
                "prefix": "lvl",
                "return_type":"int",
                "description": "number of amplitude moves that brought amplitude closer to the correct value"
            },
            "OffsetGoodMoveCount": {
                "type": "OffsetGoodMoveCount",
                "enabled": true,
                "count":"level_range",
                "prefix": "lvl",
                "return_type":"int",
                "description": "number of offset moves that brought offset closer to the correct value"
            },
            "WavelengthGoodMoveCount": {
                "type": "WavelengthGoodMoveCount",
                "enabled": true,
                "count":"level_range",
                "prefix": "lvl",
                "return_type":"int",
                "description": "number of wavelength moves that brought wavelength closer to the correct value"
            },
            "PercentAmplitudeMoves": {
                "type": "PercentAmplitudeMoves",
                "enabled": true,
                "count":"level_range",
                "prefix": "lvl",
                "events": [],
                "description": "percent of total moves that were amplitude adjustments in a level"
            },
            "PercentOffsetMoves": {
                "type": "PercentOffsetMoves",
                "enabled": true,
                "count":"level_range",
                "prefix": "lvl",
                "events": ["SLIDER_MOVE_RELEASE", "ARROW_MOVE_RELEASE"],
                "description": "percent of total moves that were offset adjustments in a level"
            },
            "PercentWavelengthMoves": {
                "type": "PercentWavelengthMoves",
                "enabled": true,
                "count":"level_range",
                "prefix": "lvl",
                "events": ["SLIDER_MOVE_RELEASE", "ARROW_MOVE_RELEASE"],
                "description": "percent of total moves that were wavelength adjustments in a level"
            },
            "PercentAmplitudeGoodMoves": {
                "type": "PercentAmplitudeGoodMoves",
                "enabled": true,
                "count":"level_range",
                "prefix": "lvl",
                "events": ["SLIDER_MOVE_RELEASE", "ARROW_MOVE_RELEASE"],
                "description": "percent of amplitude moves that brought amplitude closer to the correct value"
            },
            "PercentOffsetGoodMoves": {
                "type": "PercentOffsetGoodMoves",
                "enabled": true,
                "count":"level_range",
                "prefix": "lvl",
                "events": ["SLIDER_MOVE_RELEASE", "ARROW_MOVE_RELEASE"],
                "description": "percent of wavelength moves that brought wavelength closer to the correct value"
            },
            "PercentWavelengthGoodMoves": {
                "type": "PercentWavelengthGoodMoves",
                "enabled": true,
                "count":"level_range",
                "prefix": "lvl",
                "events": ["SLIDER_MOVE_RELEASE", "ARROW_MOVE_RELEASE"],
                "description": "percent of wavelength moves that brought wavelength closer to the correct value"
            },
            "SliderAverageRange": {
                "type": "SliderAverageRange",
                "enabled": true,
                "count":"level_range",
                "prefix": "lvl",
                "description": "difference between max and min values of a slider move, averaged together across a level"
            },
            "SliderAverageStandardDeviations": {
                "type": "SliderAverageStandardDeviations",
                "enabled": true,
                "count":"level_range",
                "prefix": "lvl",
                "description": "Average of stdev_val for all slider moves in a level"
            },
            "TotalArrowMoves": {
                "type": "TotalArrowMoves",
                "enabled": true,
                "count":"level_range",
                "prefix": "lvl",
                "return_type":"int",
                "description": "arrow moves across a given level [count of 'ARROW_MOVE_RELEASE' events]"
            },
            "TotalMoveTypeChanges": {
                "type": "TotalMoveTypeChanges",
                "enabled": true,
                "count":"level_range",
                "prefix": "lvl",
                "return_type":"int",
                "description": "number of times the player changes between 'Arrow' and 'Slider' move types across a level"
            },
            "TotalSliderMoves": {
                "type": "TotalSliderMoves",
                "enabled": true,
                "count":"level_range",
                "prefix": "lvl",
                "return_type":"int",
                "description": "slider moves across a given level [count of 'SLIDER_MOVE_RELEASE' events]"
            },





            "QuestionAnswered" : {
                "enabled": true,
                "count" : 4,
                "prefix": "QA",
                "description" : "The answer the user gave to a given question (or -1 if unanswered)"
            },
            "QuestionCorrect"  : {
                "enabled": true,
                "count" : 4,
                "prefix": "QA",
                "description" : "0 if user answered the question incorrectly, 1 if answered correctly, -1 if unanswered"
            },
            "TimeToAnswerMS"   : {
                "enabled": false,
                "count" : 4,
                "prefix": "QA",
                "description" : "The time, in milliseconds, taken by the player before answering the question"
            },



            "SequenceLevel": {
                "type": "SequenceLevel",
                "enabled": true,
                "count":"level_range",
                "prefix": "lvl",
                "return_type":"str",
                "description": "Sequence of slider interactions (e.g. 'wow' for Wavelength, Offset, Wavelength)"
            }
        },

        "aggregate":{
            "SessionID": {
                "type": "SessionID",
                "enabled": true,
                "description":"The player's session ID number for this play session"
            },
            "PersistentSessionID": {
                "type": "PersistentSessionID",
                "enabled": true,
                "description":"The session ID for the player's device, persists across multiple players using the same device."
            },
            "AverageFails" : {
                "enabled": true,
                "description": "totalFails averaged over all levels"
            },
            "AverageLevelTime" :  {
                "enabled": true,
                "description":"totalLevelTime averaged over all levels"
            },
            "AverageMoveTypeChanges" : {
                "enabled": true,
                "description": "totalMoveTypeChanges averaged over all levels"
            },
            "AverageSliderMoves" :  {
                "enabled": true,
                "description":"totalSliderMoves averaged over all levels"
            },
            "OverallPercentAmplitudeMoves" : {
                "enabled": true,
                "description": "Percent of total moves that were amplitude adjustments over a whole session"
            },
            "OverallPercentOffsetMoves" :  {
                "enabled": true,
                "description":"Percent of total moves that were offset adjustments over a whole session"
            },
            "OverallPercentWavelengthMoves" :  {
                "enabled": true,
                "description":"Percent of total moves that were wavelength adjustments over a whole session"
            },
            "OverallSliderAverageRange" : {
                "enabled": true,
                "description": "Average range of slider moves over a whole session"
            },
            "OverallSliderAverageStandardDeviations" : {
                "enabled": true,
                "description": "Average standard deviation of slider moves over a whole sessioin"
            }
        }
    },

    "config": {
    	"SUPPORTED_VERS": [4]
	}
}