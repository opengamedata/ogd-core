{
    "level_range": {
        "min": 0,
        "max": 43
    },
    "events": {
        "accept_job": {
            "user_code": "Generated user code for the current player",
            "app_version": "Current game build version",
            "app_flavor": "Git branch origin for current build",
            "log_version": "Current logging version",
            "job_name": "String name of the accepted job"
        },
        "switch_job": {
            "user_code": "Generated user code for the current player",
            "app_version": "Current game build version",
            "app_flavor": "Git branch origin for current build",
            "log_version": "Current logging version",
            "job_name": "String name of the current job",
            "prev_job_name": "String name of the previous job"
        },
        "receive_fact": {
            "user_code": "Generated user code for the current player",
            "app_version": "Current game build version",
            "app_flavor": "Git branch origin for current build",
            "log_version": "Current logging version",
            "job_name": "String name of the current job",
            "fact_id": "Unique ID for the given fact"
        },
        "receive_entity": {
            "user_code": "Generated user code for the current player",
            "app_version": "Current game build version",
            "app_flavor": "Git branch origin for current build",
            "log_version": "Current logging version",
            "job_name": "String name of the current job",
            "entity_id": "Unique ID for the given entity"
        },
        "complete_job": {
            "user_code": "Generated user code for the current player",
            "app_version": "Current game build version",
            "app_flavor": "Git branch origin for current build",
            "log_version": "Current logging version",
            "job_name": "String name of the completed job"
        },
        "complete_task": {
            "user_code": "Generated user code for the current player",
            "app_version": "Current game build version",
            "app_flavor": "Git branch origin for current build",
            "log_version": "Current logging version",
            "job_name": "ID of the completed task"
        },
        "scene_changed": {
            "user_code": "Generated user code for the current player",
            "app_version": "Current game build version",
            "app_flavor": "Git branch origin for current build",
            "log_version": "Current logging version",
            "job_name": "String name of the current job",
            "scene_name": "Name of the loaded scene"
        },
        "room_changed": {
            "user_code": "Generated user code for the current player",
            "app_version": "Current game build version",
            "app_flavor": "Git branch origin for current build",
            "log_version": "Current logging version",
            "job_name": "String name of the current job",
            "room_name": "Name of the room being entered"
        },
        "begin_dive": {
            "user_code": "Generated user code for the current player",
            "app_version": "Current game build version",
            "app_flavor": "Git branch origin for current build",
            "log_version": "Current logging version",
            "job_name": "String name of the current job",
            "site_id": "ID of the dive site"
        },
        "ask_for_help": {
            "user_code": "Generated user code for the current player",
            "app_version": "Current game build version",
            "app_flavor": "Git branch origin for current build",
            "log_version": "Current logging version",
            "job_name": "String name of the current job",
            "node_id": "Scripting ID for the hint response"
        },
        "guide_script_triggered": {
            "user_code": "Generated user code for the current player",
            "app_version": "Current game build version",
            "app_flavor": "Git branch origin for current build",
            "log_version": "Current logging version",
            "job_name": "String name of the current job",
            "node_id": "Scripting ID for the guide's response"
        },
        "script_fired": {
            "user_code": "Generated user code for the current player",
            "app_version": "Current game build version",
            "app_flavor": "Git branch origin for current build",
            "log_version": "Current logging version",
            "job_name": "String name of the current job",
            "node_id": "ID of a given script node"
        },
        "open_bestiary": {
            "user_code": "Generated user code for the current player",
            "app_version": "Current game build version",
            "app_flavor": "Git branch origin for current build",
            "log_version": "Current logging version",
            "job_name": "String name of the current job"
        },
        "bestiary_open_species_tab": {
            "user_code": "Generated user code for the current player",
            "app_version": "Current game build version",
            "app_flavor": "Git branch origin for current build",
            "log_version": "Current logging version",
            "job_name": "String name of the current job"
        },
        "bestiary_open_environments_tab": {
            "user_code": "Generated user code for the current player",
            "app_version": "Current game build version",
            "app_flavor": "Git branch origin for current build",
            "log_version": "Current logging version",
            "job_name": "String name of the current job"
        },
        "bestiary_open_models_tab": {
            "user_code": "Generated user code for the current player",
            "app_version": "Current game build version",
            "app_flavor": "Git branch origin for current build",
            "log_version": "Current logging version",
            "job_name": "String name of the current job"
        },
        "bestiary_select_species": {
            "user_code": "Generated user code for the current player",
            "app_version": "Current game build version",
            "app_flavor": "Git branch origin for current build",
            "log_version": "Current logging version",
            "job_name": "String name of the current job",
            "species_id": "ID of the selected species"
        },
        "bestiary_select_environment": {
            "user_code": "Generated user code for the current player",
            "app_version": "Current game build version",
            "app_flavor": "Git branch origin for current build",
            "log_version": "Current logging version",
            "job_name": "String name of the current job",
            "environment_id": "ID of the selected environment"
        },
        "bestiary_select_model": {
            "user_code": "Generated user code for the current player",
            "app_version": "Current game build version",
            "app_flavor": "Git branch origin for current build",
            "log_version": "Current logging version",
            "job_name": "String name of the current job",
            "model_id": "ID of the selected model"
        },
        "close_bestiary": {
            "user_code": "Generated user code for the current player",
            "app_version": "Current game build version",
            "app_flavor": "Git branch origin for current build",
            "log_version": "Current logging version",
            "job_name": "String name of the current job"
        },
        "open_status": {
            "user_code": "Generated user code for the current player",
            "app_version": "Current game build version",
            "app_flavor": "Git branch origin for current build",
            "log_version": "Current logging version",
            "job_name": "String name of the current job"
        },
        "status_open_job_tab": {
            "user_code": "Generated user code for the current player",
            "app_version": "Current game build version",
            "app_flavor": "Git branch origin for current build",
            "log_version": "Current logging version",
            "job_name": "String name of the current job"
        },
        "status_open_item_tab": {
            "user_code": "Generated user code for the current player",
            "app_version": "Current game build version",
            "app_flavor": "Git branch origin for current build",
            "log_version": "Current logging version",
            "job_name": "String name of the current job"
        },
        "status_open_tech_tab": {
            "user_code": "Generated user code for the current player",
            "app_version": "Current game build version",
            "app_flavor": "Git branch origin for current build",
            "log_version": "Current logging version",
            "job_name": "String name of the current job"
        },
        "close_status": {
            "user_code": "Generated user code for the current player",
            "app_version": "Current game build version",
            "app_flavor": "Git branch origin for current build",
            "log_version": "Current logging version",
            "job_name": "String name of the current job"
        },
        "begin_model": {
            "user_code": "Generated user code for the current player",
            "app_version": "Current game build version",
            "app_flavor": "Git branch origin for current build",
            "log_version": "Current logging version",
            "job_name": "String name of the current job"
        },
        "model_phase_changed": {
            "user_code": "Generated user code for the current player",
            "app_version": "Current game build version",
            "app_flavor": "Git branch origin for current build",
            "log_version": "Current logging version",
            "job_name": "String name of the current job",
            "phase": "The selected modeling phase"
        },
        "model_ecosystem_selected": {
            "user_code": "Generated user code for the current player",
            "app_version": "Current game build version",
            "app_flavor": "Git branch origin for current build",
            "log_version": "Current logging version",
            "job_name": "String name of the current job",
            "ecosystem": "Ecosystem selected for modeling"
        },
        "model_concept_started": {
            "user_code": "Generated user code for the current player",
            "app_version": "Current game build version",
            "app_flavor": "Git branch origin for current build",
            "log_version": "Current logging version",
            "job_name": "String name of the current job",
            "ecosystem": "Ecosystem selected for modeling"
        },
        "model_concept_updated": {
            "user_code": "Generated user code for the current player",
            "app_version": "Current game build version",
            "app_flavor": "Git branch origin for current build",
            "log_version": "Current logging version",
            "job_name": "String name of the current job",
            "ecosystem": "Ecosystem selected for modeling",
            "status": "Updated status of the concept model"
        },
        "model_concept_exported": {
            "user_code": "Generated user code for the current player",
            "app_version": "Current game build version",
            "app_flavor": "Git branch origin for current build",
            "log_version": "Current logging version",
            "job_name": "String name of the current job",
            "ecosystem": "Ecosystem selected for modeling"
        },
        "begin_simulation": {
            "user_code": "Generated user code for the current player",
            "app_version": "Current game build version",
            "app_flavor": "Git branch origin for current build",
            "log_version": "Current logging version",
            "job_name": "String name of the current job",
            "ecosystem": "Ecosystem selected for modeling"
        },
        "model_sync_error": {
            "user_code": "Generated user code for the current player",
            "app_version": "Current game build version",
            "app_flavor": "Git branch origin for current build",
            "log_version": "Current logging version",
            "job_name": "String name of the current job",
            "ecosystem": "Ecosystem selected for modeling",
            "sync": "Sync % achieved with the current model"
        },
        "simulation_sync_achieved": {
            "user_code": "Generated user code for the current player",
            "app_version": "Current game build version",
            "app_flavor": "Git branch origin for current build",
            "log_version": "Current logging version",
            "job_name": "String name of the current job",
            "ecosystem": "Ecosystem selected for modeling"
        },
        "model_predict_completed": {
            "user_code": "Generated user code for the current player",
            "app_version": "Current game build version",
            "app_flavor": "Git branch origin for current build",
            "log_version": "Current logging version",
            "job_name": "String name of the current job",
            "ecosystem": "Ecosystem selected for modeling"
        },
        "model_intervene_update": {
            "user_code": "Generated user code for the current player",
            "app_version": "Current game build version",
            "app_flavor": "Git branch origin for current build",
            "log_version": "Current logging version",
            "job_name": "String name of the current job",
            "ecosystem": "Ecosystem selected for modeling",
            "organism": "The organism having its population modified by the player",
            "difference_value": "The population change for the selected organism"
        },
        "model_intervene_error": {
            "user_code": "Generated user code for the current player",
            "app_version": "Current game build version",
            "app_flavor": "Git branch origin for current build",
            "log_version": "Current logging version",
            "job_name": "String name of the current job",
            "ecosystem": "Ecosystem selected for modeling"
        },
        "model_intervene_completed": {
            "user_code": "Generated user code for the current player",
            "app_version": "Current game build version",
            "app_flavor": "Git branch origin for current build",
            "log_version": "Current logging version",
            "job_name": "String name of the current job",
            "ecosystem": "Ecosystem selected for modeling"
        },
        "end_model": {
            "user_code": "Generated user code for the current player",
            "app_version": "Current game build version",
            "app_flavor": "Git branch origin for current build",
            "log_version": "Current logging version",
            "job_name": "String name of the current job",
            "phase": "The selected modeling phase upon leaving",
            "ecosystem": "The selected ecosystem upon leaving"
        },
        "purchase_upgrade": {
            "user_code": "Generated user code for the current player",
            "app_version": "Current game build version",
            "app_flavor": "Git branch origin for current build",
            "log_version": "Current logging version",
            "job_name": "String name of the current job",
            "item_id": "ID of the purchased item",
            "item_name": "String name of the purchased item",
            "cost": "Cost of the purchased item"
        },
        "insufficient_funds": {
            "user_code": "Generated user code for the current player",
            "app_version": "Current game build version",
            "app_flavor": "Git branch origin for current build",
            "log_version": "Current logging version",
            "job_name": "String name of the current job",
            "item_id": "ID of the item",
            "item_name": "String name of the item",
            "cost": "Cost of the item"
        },
        "talk_to_shopkeep": {
            "user_code": "Generated user code for the current player",
            "app_version": "Current game build version",
            "app_flavor": "Git branch origin for current build",
            "log_version": "Current logging version",
            "job_name": "String name of the current job"
        },
        "add_environment": {
            "user_code": "Generated user code for the current player",
            "app_version": "Current game build version",
            "app_flavor": "Git branch origin for current build",
            "log_version": "Current logging version",
            "job_name": "String name of the current job",
            "tank_type": "Selected tank type for the experiment",
            "environment": "Name of the added environment"
        },
        "remove_environment": {
            "user_code": "Generated user code for the current player",
            "app_version": "Current game build version",
            "app_flavor": "Git branch origin for current build",
            "log_version": "Current logging version",
            "job_name": "String name of the current job",
            "tank_type": "Selected tank type for the experiment",
            "environment": "Name of the removed environment"
        },
        "add_critter": {
            "user_code": "Generated user code for the current player",
            "app_version": "Current game build version",
            "app_flavor": "Git branch origin for current build",
            "log_version": "Current logging version",
            "job_name": "String name of the current job",
            "tank_type": "Selected tank type for the experiment",
            "environment": "Selected environment for the experiment",
            "critter": "Name of the critter added to the tank"
        },
        "remove_critter": {
            "user_code": "Generated user code for the current player",
            "app_version": "Current game build version",
            "app_flavor": "Git branch origin for current build",
            "log_version": "Current logging version",
            "job_name": "String name of the current job",
            "tank_type": "Selected tank type for the experiment",
            "environment": "Selected environment for the experiment",
            "critter": "Name of the critter removed from the tank"
        },
        "begin_experiment": {
            "user_code": "Generated user code for the current player",
            "app_version": "Current game build version",
            "app_flavor": "Git branch origin for current build",
            "log_version": "Current logging version",
            "job_name": "String name of the current job",
            "tank_type": "Selected tank type for the experiment",
            "environment": "Selected environment for the experiment",
            "critters": "Comma separated list of all critters added to the tank"
        },
        "end_experiment": {
            "user_code": "Generated user code for the current player",
            "app_version": "Current game build version",
            "app_flavor": "Git branch origin for current build",
            "log_version": "Current logging version",
            "job_name": "String name of the current job",
            "tank_type": "Selected tank type for the experiment",
            "environment": "Selected environment for the experiment",
            "critters": "Comma separated list of all critters added to the tank"
        },
        "begin_argument": {
            "user_code": "Generated user code for the current player",
            "app_version": "Current game build version",
            "app_flavor": "Git branch origin for current build",
            "log_version": "Current logging version",
            "job_name": "String name of the current job"
        },
        "fact_submitted": {
            "user_code": "Generated user code for the current player",
            "app_version": "Current game build version",
            "app_flavor": "Git branch origin for current build",
            "log_version": "Current logging version",
            "job_name": "String name of the current job",
            "fact_id": "ID of the submitted fact"
        },
        "fact_rejected": {
            "user_code": "Generated user code for the current player",
            "app_version": "Current game build version",
            "app_flavor": "Git branch origin for current build",
            "log_version": "Current logging version",
            "job_name": "String name of the current job",
            "fact_id": "ID of the rejected fact"
        },
        "leave_argument": {
            "user_code": "Generated user code for the current player",
            "app_version": "Current game build version",
            "app_flavor": "Git branch origin for current build",
            "log_version": "Current logging version",
            "job_name": "String name of the current job"
        },
        "complete_argument": {
            "user_code": "Generated user code for the current player",
            "app_version": "Current game build version",
            "app_flavor": "Git branch origin for current build",
            "log_version": "Current logging version",
            "job_name": "String name of the current job"
        }
    },
    "detectors": {
        "per_count": {},
        "aggregate": {
            "CollectFactNoJob": {
                "enabled": true,
                "description": "Triggers an event when a player collects a fact while not actively working on a job"
            },
            "DiveSiteNoEvidence": {
                "enabled": true,
                "threshold": 30,
                "description": "Triggers an event when a player has gone sufficiently long at a dive site without uncovering new evidence"
            },
            "EchoRoomChange": {
                "enabled": false,
                "description": "Triggers an event when a player changes rooms."
            }
        }
    },
    "features": {
        "per_count": {
            "JobActiveTime": {
                "enabled": true,
                "count": "level_range",
                "prefix": "job",
                "description": "Time spent with job as the active job"
            },
            "JobArgumentationTime": {
                "enabled": true,
                "count": "level_range",
                "prefix": "job",
                "description": "Time spent in argumentation during a job"
            },
            "JobCompletionTime": {
                "enabled": true,
                "count": "level_range",
                "prefix": "job",
                "description": "Time taken to complete a given job"
            },
            "JobDiveSitesCount": {
                "enabled": true,
                "count": "level_range",
                "prefix": "job",
                "description": "Number of dive sites visited during a job"
            },
            "JobDiveTime": {
                "enabled": true,
                "count": "level_range",
                "prefix": "job",
                "description": "Time spent diving during a job"
            },
            "JobExperimentationTime": {
                "enabled": true,
                "count": "level_range",
                "prefix": "job",
                "description": "Time spent in experimentation during a job"
            },
            "JobModelingTime": {
                "enabled": true,
                "count": "level_range",
                "prefix": "job",
                "description": "Time spent in modeling during a job"
            },
            "JobGuideCount": {
                "enabled": true,
                "count": "level_range",
                "prefix": "job",
                "description": "Number of times player talked with guide during a job"
            },
            "JobHelpCount": {
                "enabled": true,
                "count": "level_range",
                "prefix": "job",
                "description": "Number of times player asked for help during a job"
            },
            "JobTasksCompleted": {
                "enabled": true,
                "count": "level_range",
                "prefix": "job",
                "description": "Number of tasks completed for a given job"
            },
            "JobsAttempted": {
                "enabled": true,
                "count": "level_range",
                "prefix": "job",
                "description": "Subfeatures for number of job starts and completes, percent complete, and avg/std time to complete",
                "subfeatures": {
                    "job-name": {
                        "return_type": "string",
                        "description": "String name for a job"
                    },
                    "num-starts": {
                        "return_type": "int",
                        "description": "Number of accept_job events for a given job id"
                    },
                    "num-completes": {
                        "return_type": "int",
                        "description": "Number of complete_job events for a given job id"
                    },
                    "percent-complete": {
                        "return_type": "float",
                        "description": "Percent of jobs which were accepted and completed"
                    },
                    "avg-time-complete": {
                        "return_type": "float",
                        "description": "Average time taken from accepting to completing a job"
                    },
                    "std-dev-complete": {
                        "return_type": "float",
                        "description": "Standard deviation of time taken to complete"
                    },
                    "job-difficulties": {
                        "return_type": "dict",
                        "description": "Difficulty of experimentation, modeling, and argumentation phases in the job"
                    }
                }
            },
            "SyncCompletionTime": {
                "enabled": true,
                "count": "level_range",
                "prefix": "job",
                "description": "Time taken to achieve 100% sync in a simulation"
            }
        },
        "aggregate": {
            "ActiveJobs": {
                "enabled": true,
                "description": "Count of players who left off on each job."
            },
            "EventList": {
                "enabled": true,
                "description": "List of key events that happened in a player's session(s)"
            },
            "JobsCompleted": {
                "enabled": true,
                "description": "List of completed jobs for a player"
            },
            "PlayerSummary": {
                "enabled": true,
                "description": "Summary of player statistics (active session time, jobs completed, number of sessions)"
            },
            "PopulationSummary": {
                "enabled": true,
                "description": "Summary of population statistics (active session time, average jobs completed count, average session count)"
            },
            "SessionDiveSitesCount": {
                "enabled": true,
                "description": "Time spent playing in a given session"
            },
            "SessionDuration": {
                "enabled": true,
                "description": "Time spent playing in a given session"
            },
            "SessionGuideCount": {
                "enabled": true,
                "description": "Number of times player talked with the guide throughout the session"
            },
            "SessionHelpCount": {
                "enabled": true,
                "description": "Number of times player clicked the help button throughout the session"
            },
            "SessionID": {
                "enabled": true,
                "description": "The player's session ID number for this play session"
            },
            "SessionJobsCompleted": {
                "enabled": true,
                "description": "Number of jobs completed in a given session"
            },
            "SwitchJobsCount": {
                "enabled": true,
                "description": "Number of times player switched jobs before completion"
            },
            "TopJobCompletionDestinations": {
                "enabled": true,
                "description": "Top five most accepted jobs after previously completing a given job"
            },
            "TopJobSwitchDestinations": {
                "enabled": true,
                "description": "Top five most accepted jobs after switching away from a given job"
            },
            "TotalArgumentationTime": {
                "enabled": true,
                "description": "Total time spent in argumentation"
            },
            "EchoSessionID": {
                "enabled": true,
                "description": "Test of second-order features."
            },
            "TotalDiveTime": {
                "enabled": true,
                "description": "Total time spent in dive sites"
            },
            "TotalExperimentationTime": {
                "enabled": true,
                "description": "Total time spent in experimentation"
            },
            "UserAvgSessionDuration": {
                "enabled": true,
                "description": "Average session duration for a user."
            },
            "UserSessionCount": {
                "enabled": true,
                "description": "Count of sessions played for a user."
            },
            "UserTotalSessionDuration": {
                "enabled": true,
                "description": "Total duration of all sessions for a user."
            }
        }
    },
    "config": {
        "SUPPORTED_VERS": [
            1
        ]
    }
}