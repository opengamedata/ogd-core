# Workflow to run monthly exports of data.
name: Monthly Automated Exports
on:
  schedule:
    - cron: '1 0 2 * *'
  workflow_dispatch: # Allow manual trigger of this workflow from the Actions tab
jobs:
  export_data:
    name: Export All Games
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # don't use the first one until we've got STEMPORTS and AQUALAB
        # game: [AQUALAB, BACTERIA, BALLOON, CRYSTAL, CYCLE_CARBON, CYCLE_NITROGEN, CYCLE_WATER, EARTHQUAKE, JOWILDER, LAKELAND, MAGNET, STEMPORTS, WAVES, WIND]
        game: [AQUALAB, BACTERIA, BALLOON, CRYSTAL, CYCLE_CARBON, CYCLE_NITROGEN, CYCLE_WATER, EARTHQUAKE, JOWILDER, LAKELAND, MAGNET, SHADOWSPECT, SHIPWRECKS, WAVES, WIND]
      fail-fast: false # we don't want to cancel just because one game fails.
      max-parallel: 1

    # Steps to set up for and execute an export
    steps:
    - uses: actions/checkout@v2
      # A bunch of copy-paste crap to set up google cloud for any given game.
    - if: ${{ matrix.game == 'AQUALAB' }}
      name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v0
      with:
        project_id: ${{ secrets.AQUALAB_BQ_PROJECT_ID }}
        service_account_key: ${{ secrets.AQUALAB_BQ_KEY }}
        export_default_credentials: true
    - if: ${{ matrix.game == 'SHADOWSPECT' }}
      name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v0
      with:
        project_id: ${{ secrets.SHADOWSPECT_BQ_PROJECT_ID }}
        service_account_key: ${{ secrets.SHADOWSPECT_BQ_KEY }}
        export_default_credentials: true
    - if: ${{ matrix.game == 'SHIPWRECKS' }}
      name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v0
      with:
        project_id: ${{ secrets.SHIPWRECKS_BQ_PROJECT_ID }}
        service_account_key: ${{ secrets.SHIPWRECKS_BQ_KEY }}
        export_default_credentials: true
      # Back to normal setup stuff.
    - name: Get OpenConnect
      run: sudo apt-get -q update && sudo apt-get -q install openconnect
    - name: Connect VPN
      run: echo ${{ secrets.VPN_PASS }} | sudo openconnect --protocol=gp -u ${{ secrets.VPN_USER }} --passwd-on-stdin soe.vpn.wisc.edu &
    - name: Get Dependencies
      uses: ./.github/actions/OGD_dependencies
    - name: Set up Config File
      uses: ./.github/actions/OGD_config
      with:
        vpn_user: ${{secrets.VPN_USER}}
        vpn_pass: ${{secrets.VPN_PASS}}
        sql_host: ${{secrets.SQL_HOST}}
        sql_user: ${{secrets.SQL_USER}}
        sql_pass: ${{secrets.SQL_PASS}}
        log_level: "INFO"
    - name: Set up Schema File
      uses: ./.github/actions/OGD_schema
      with:
        game: ${{matrix.game}}
    - name: Do Export of last month
      uses: ./.github/actions/export_last_month
      with:
        game: ${{matrix.game}}
    - name: Upload files to opengamedata via scp
      run: |
        mkdir -p ~/.ssh
        echo '${{secrets.FILE_DEPLOY_KEY}}' >> ./key.txt
        chmod 600 ./key.txt
        ssh -o StrictHostKeyChecking=no -i ./key.txt ${{ secrets.VPN_USER }}@${{ secrets.FILE_HOST }} "cd /var/www/opengamedata/data; mkdir -p ${{matrix.game}}"
        scp -o StrictHostKeyChecking=no -i ./key.txt ./data/${{matrix.game}}/* ${{ secrets.VPN_USER }}@${{ secrets.FILE_HOST }}:/var/www/opengamedata/data/${{matrix.game}}/
    - name: Upload logs as artifacts
      uses: actions/upload-artifact@v2
      with:
        path: ./*.log
  
  trigger_reindex:
    name: Reindex OpenGameData Files
    runs-on: ubuntu-latest
    if: always()
    needs: export_data
    steps:
    - name: Get OpenConnect
      run: sudo apt-get -q update && sudo apt-get -q install openconnect
    - name: Connect VPN
      run: echo ${{ secrets.VPN_PASS }} | sudo openconnect --protocol=gp -u ${{ secrets.VPN_USER }} --passwd-on-stdin soe.vpn.wisc.edu &
    - name: Trigger reindex via ssh
      # run: echo "placeholder for reindexing!"
      run: |
        mkdir -p ~/.ssh
        echo '${{secrets.FILE_DEPLOY_KEY}}' >> ./key.txt
        chmod 600 ./key.txt
        ssh -o StrictHostKeyChecking=no -i ./key.txt ${{ secrets.VPN_USER }}@${{ secrets.FILE_HOST }} "cd /var/www/opengamedata; pwd; ls; python3 reindexer.py;"
