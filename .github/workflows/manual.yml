# Workflow to run monthly exports of data.
name: Manual Export
run-name: ${{ format('{0} - {1}', github.workflow, inputs.game) }}
on:
  workflow_dispatch:
    inputs:
      game:
        description: "Game: the game(s) to be exported, comma-separated"
        required: true
        default: "['BACTERIA']"
      monthly:
        type: boolean
        description: "Monthly: if true, use month/year. Else, use start and end dates"
        required: true
        default: true
      month_year:
        description: "Month/Year: the month(s) and year(s) to export (comma-separated). Only used if 'monthly' is true."
        required: false
        default: "['01/2021']"
      start_date:
        description: "Start Date: the start date for the export"
        required: false
        default: "01/01/2021"
      end_date:
        description: "End Date: the end date for the export"
        required: false
        default: "01/01/2021"
      export_to_web:
        type: boolean
        description: "Export to Web: if true, the exported files will be uploaded to the Open Game Data website, else they will only be uploaded as an artifact in the GitHub Actions results."
        required: true
        default: false
      slice_size:
        description: "Slice Size: the size of slices to use"
        required: false
        default: "1000"
      log_level:
        type: choice
        description: "Log Level: what level of debugging output to log"
        required: true
        default: "INFO"
        options:
        - "DEBUG"
        - "INFO"
        - "WARNING"
        - "ERROR"

env:
  OGD_BQ_GAMES: '["AQUALAB", "BACTERIA", "BALLOON", "CRYSTAL", "CYCLE_CARBON", "CYCLE_NITROGEN", "CYCLE_WATER", "EARTHQUAKE", "JOWILDER", "PENGUINS", "LAKELAND", "MAGNET", "WAVES", "WIND"]'

jobs:
  export_data:
    name: Export Game
    timeout-minutes: 1440
    strategy:
      matrix:
        game: ${{ FromJson(github.event.inputs.game) }}
        month_year: ${{ FromJson(github.event.inputs.month_year) }}
      fail-fast: false # we don't want to cancel just because one game fails.
      max-parallel: 3

    # Steps to set up for and execute an export
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
      # A bunch of copy-paste crap to set up google cloud for any given game.
    - if: contains(fromJson(${{ env.OGD_BQ_GAMES }}), ${{ matrix.game }})
      name: Authenticate with Google Cloud
      uses: google-github-actions/auth@v2
      with:
        project_id: ${{ secrets.OGD_BQ_PROJECT_ID }}
        credentials_json: ${{ secrets.OGD_SELECTOR_BQ_KEY }}
        # export_default_credentials: true
    - if: ${{ matrix.game == 'MASHOPOLIS' }}
      name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.BQ_MASHOPOLIS_PROJECT_ID }}
        service_account_key: ${{ secrets.BQ_MASHOPOLIS_JSON }}
        export_default_credentials: true
    - if: ${{ matrix.game == 'SHADOWSPECT' }}
      name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.BQ_SHADOWSPECT_PROJECT_ID }}
        service_account_key: ${{ secrets.BQ_SHADOWSPECT_JSON }}
        export_default_credentials: true
    - if: ${{ matrix.game == 'SHIPWRECKS' }}
      name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.BQ_SHIPWRECKS_PROJECT_ID }}
        service_account_key: ${{ secrets.BQ_SHIPWRECKS_JSON }}
        export_default_credentials: true
      # Back to normal setup stuff.
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        version: '>= 363.0.0'
    - name: Connect to VPN
      uses: opengamedata/actions-openconnect-vpn@v1.1
      with:
        username: ${{ secrets.VPN_USER }}
        password: ${{ secrets.VPN_PASS }}
        endpoint: "soe.vpn.wisc.edu"
    - name: Get Dependencies
      uses: opengamedata/actions-setup-ogd-py-dependencies@v1.1
      with:
        python_version: ${{ vars.OGD_PYTHON_VERSION }}
    - name: Set up Config File
      uses: ./.github/actions/OGD_config
      with:
        sql_user: ${{secrets.SQL_USER}}
        sql_pass: ${{secrets.SQL_PASS}}
        ssh_host: ${{vars.FD_STORE_HOST}}
        ssh_user: ${{secrets.VPN_USER}}
        ssh_pass: ${{secrets.VPN_PASS}}
        slice_size: ${{ github.event.inputs.slice_size }}
        log_level: ${{ github.event.inputs.log_level }}
    - name: Set up Schema File
      uses: ./.github/actions/OGD_schema
      with:
        game: ${{matrix.game}}
    - name: Do Export of Month
      if: github.event.inputs.monthly == 'true'
      uses: ./.github/actions/export_custom_month
      with:
        game: ${{matrix.game}}
        month_year: ${{matrix.month_year}}
        events_only: false
    - name: Do Export of Range
      if: github.event.inputs.monthly == 'false'
      uses: ./.github/actions/export_custom
      with:
        game: ${{matrix.game}}
        start_date: ${{github.event.inputs.start_date}}
        end_date: ${{github.event.inputs.end_date}}
        events_only: false
    - name: Upload files to opengamedata via scp
      if: github.event.inputs.export_to_web == 'true'
      run: |
        mkdir -p ~/.ssh
        echo '${{secrets.VPN_KEY}}' >> ./key.txt
        chmod 600 ./key.txt
        ssh -o StrictHostKeyChecking=no -i ./key.txt ${{ secrets.VPN_USER }}@${{ vars.FD_WEB_HOST }} "cd /var/www/opengamedata/data; mkdir -p ${{matrix.game}}"
        scp -o StrictHostKeyChecking=no -i ./key.txt ./data/${{matrix.game}}/* ${{ secrets.VPN_USER }}@${{ vars.FD_WEB_HOST }}:/var/www/opengamedata/data/${{matrix.game}}/
    - name: Upload data as artifact
      if: github.event.inputs.export_to_web == 'false'
      uses: actions/upload-artifact@v3
      with:
        name: ${{matrix.game}}_export_data
        path: ./data/${{matrix.game}}/*.zip
    - name: Upload logs as artifacts
      uses: actions/upload-artifact@v3
      with:
        name: log_data
        path: ./*.log
  
  trigger_reindex:
    name: Trigger File Reindex
    if: github.event.inputs.export_to_web == 'true'
    needs: export_data
    uses: ./.github/workflows/reindex_fileserver.yml
    with:
      FILE_SERVER: ${{ vars.FD_WEB_HOST }}
      data_path: "/var/www/opengamedata/data"
